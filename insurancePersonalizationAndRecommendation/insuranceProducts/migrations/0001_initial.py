# Generated by Django 3.2 on 2021-05-06 17:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InsuranceProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('productCode', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InsuranceDiscussion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('primaryFirstName', models.CharField(blank=True, max_length=50, verbose_name='First Name')),
                ('primaryMiddleName', models.CharField(blank=True, max_length=50, verbose_name='Middle Name')),
                ('primaryLastName', models.CharField(blank=True, max_length=50, verbose_name='Last Name')),
                ('primaryAge', models.PositiveSmallIntegerField(null=True, verbose_name='Age')),
                ('coFirstName', models.CharField(blank=True, max_length=50, verbose_name='First Name')),
                ('coMiddleName', models.CharField(blank=True, max_length=50, verbose_name='Middle Name')),
                ('coLastName', models.CharField(blank=True, max_length=50, verbose_name='Last Name')),
                ('coAge', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Age')),
                ('canada_provence', models.CharField(blank=True, choices=[('nl', 'Newfoundland and Labrador'), ('pw', 'Prince Edward Island'), ('ns', 'Nova Scotia'), ('nb', 'New Brunswick'), ('qc', 'Quebec'), ('on', 'Ontario'), ('mb', 'Manitoba'), ('sk', 'Saskatchewan'), ('ab', 'Alberta'), ('bc', 'British Columbia'), ('yt', 'Yukon'), ('nt', 'Northwest Territories'), ('nu', 'Nunavut')], max_length=2, null=True, verbose_name='Provence')),
                ('hoursWeekWorking', models.IntegerField(blank=True, null=True, verbose_name='Hours a Week Working')),
                ('hasPartnerFinResponsibility', models.CharField(blank=True, choices=[('y', 'Yes'), ('n', 'No')], max_length=2, null=True, verbose_name='Has Partner Financial Responsibility')),
                ('hasChildrenFinResponsibility', models.CharField(blank=True, choices=[('y', 'Yes'), ('n', 'No')], max_length=2, null=True, verbose_name='Has Children Financial Responsibility')),
                ('hasParentsFinResponsibility', models.CharField(blank=True, choices=[('y', 'Yes'), ('n', 'No')], max_length=2, null=True, verbose_name='Has Partner Financial Responsibility')),
                ('hasOthersFinResponsibility', models.CharField(blank=True, choices=[('y', 'Yes'), ('n', 'No')], max_length=2, null=True, verbose_name='Has Partner Financial Responsibility')),
                ('mortgageBalance', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Mortgage Balance')),
                ('mortgagePmtAmount', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Mortgage Payment Amount')),
                ('mortgagePmtFrequency', models.CharField(blank=True, choices=[('m', 'Monthly'), ('bm', 'Bi-Monthly'), ('w', 'Weekly'), ('sw', 'Semi-Weekly')], max_length=2, null=True, verbose_name='Mortgage Payment Frequency')),
                ('hlocLimit', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='HLOC Limit')),
                ('hlocBalance', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='HLOC Balance')),
                ('hlocMonthlyPmt', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='HLOC Monthly Payment')),
                ('personalLoanLimit', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Personal Loan Limit')),
                ('personalAmortizationMonths', models.IntegerField(blank=True, null=True, verbose_name='Personal Loan Amortization In Months')),
                ('personalLoanBalance', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Personal Loan Balance')),
                ('personalLoanMonthlyPmt', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Personal Loan Monthly Payment')),
                ('personalPmtFrequency', models.CharField(blank=True, choices=[('m', 'Monthly'), ('bm', 'Bi-Monthly'), ('w', 'Weekly'), ('sw', 'Semi-Weekly')], max_length=2, null=True, verbose_name='Personal Loan Payment Frequency')),
                ('creditCardLimit', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Credit Card Limit')),
                ('creditCardBalance', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Credit Card Balance')),
                ('monthlyIncomeAfterTaxes', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Monthly Income After Taxes')),
                ('totalMonthlyExpenses', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Total monthly expenses')),
                ('monthlyExpenseOtherCredit', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Other Debts Monthly expenses')),
                ('monthlyExpensePersonal', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Personal Monthly expenses')),
                ('monthlyExpenseOtherHousing', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Other Housing Payments monthly expenses')),
                ('monthlyExpensePropTaxFees', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Property taxes, condo fees, etc monthly expenses')),
                ('monthlyExpenseOther', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Other monthly expenses')),
                ('totalSavings', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Total Savings')),
                ('totalSavingsChequing', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Chequing and savings amounts')),
                ('totalSavingsTaxFreeAccts', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Tax-Free Savings Account')),
                ('totalSavingsRegRetirement', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Registered Retirement Savings Plans')),
                ('totalSavingsGuarantedInvestmentCerts', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Guaranteed Investment Certificate')),
                ('totalSavingsOther', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Other Savings')),
                ('lifeInsuranceLimit', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Life Insurance Limit')),
                ('criticalIllnessLimit', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Critical Illness Limit')),
                ('disabilityInsuranceMonthlyBenefit', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Disability Insurance Monthly Benefit')),
                ('disabilityInsurancePercentCoveredByEmployer', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Disability Insurance Percent Covered By Employer')),
                ('disabilityInsuranceUnknownEmployerCoverage', models.CharField(blank=True, choices=[('y', 'Yes'), ('n', 'No')], max_length=2, null=True, verbose_name='Not sure what my employer covers')),
                ('lifeInsurancePremiumPerMonth', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Life Insurance Premium Per Month')),
                ('criticalIllnessPremiumPerMonth', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Critical Illness Premium Per Month')),
                ('disabilityPremiumPerMonth', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Disability Insurance Premium Per Month')),
                ('agentOverallPerceptionOfCustomerResp', models.CharField(choices=[('positive', 'positive'), ('neutral', 'neutral'), ('negative', 'negative')], max_length=20, verbose_name='Agent Perception of customer response')),
                ('isRelatedToFinalizedSoldProduct', models.BooleanField(default=False, verbose_name='Discussion lead to sale')),
                ('discussionOutcomes', models.CharField(choices=[('declined', 'declined'), ('acceptedOffer', 'acceptedOffer'), ('requiresFollowup', 'requiresFollowup')], max_length=20, verbose_name='Outcome of discussion')),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agent', to=settings.AUTH_USER_MODEL)),
                ('insProduct', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='insuranceProducts.insuranceproduct')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
